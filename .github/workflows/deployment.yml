name: Continuous Deployment Workflow

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'New tag name'
        required: true

jobs:

  prepare-release:

    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:

      - name: Checkout Project
        uses: actions/checkout@v3

      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: v${{ github.event.inputs.tag }}
          tag_name: v${{ github.event.inputs.tag }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
  
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:

    - name: Checkout Project
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
        cache: 'maven'
        check-latest: true # Always download the latest java version

    - name: Setting Maven Version
      run: mvn -B versions:set -DnewVersion=${{ github.event.inputs.tag }} -DgenerateBackupPoms=false

    - name: Publish to GitHub Packages Apache Maven
      run: mvn -B package -Dmaven.test.skip=true
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Upload Jar
      uses: actions/upload-artifact@v3
      with:
        name: target
        path: ./target/cardidea-${{ github.event.inputs.tag }}.jar

  attach-assets:

    strategy:
      matrix:
        var: [
          {os: windows-latest, name: win, suffix: exe},
          {os: macos-latest, name: mac, suffix: dmg},
          {os: ubuntu-latest, name: linux, suffix: deb}
        ]
    env:
      DIR_NAME: cardidea-${{ github.event.inputs.tag }}.${{matrix.var.suffix}}

    runs-on: ${{matrix.var.os}}
    needs: [prepare-release, build]
    permissions:
      contents: write

    steps:

      - name: Checkout Project
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
          cache: 'maven'
          check-latest: true # Always download the latest java version

      - name: Download Jar
        uses: actions/download-artifact@v3
        with:
          name: target
          path: .

      - name: Create Package
        run: |
          jpackage --name cardidea --input . --main-jar cardidea-${{ github.event.inputs.tag }}.jar --app-version ${{ github.event.inputs.tag }}
  
      - name: Attach Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.prepare-release.outputs.upload_url }}
          asset_path: ./${{env.DIR_NAME}}
          asset_name: ${{env.DIR_NAME}}
          asset_content_type: application/octet-stream

  # attach-assets:

  #   runs-on: ubuntu-latest
  #   needs: [prepare-release, build]
  #   permissions:
  #     contents: write
  #   strategy:
  #     matrix:
  #       var: [
  #         {os: windows, platform: windows64, jre: OpenJDK17U-jre_x64_windows_hotspot_17.0.8_7.zip},
  #         {os: mac, platform: mac, jre: OpenJDK17U-jre_x64_mac_hotspot_17.0.8_7.tar.gz},
  #         {os: linux, platform: linux64, jre: OpenJDK17U-jre_x64_linux_hotspot_17.0.8_7.tar.gz}]
  #   env:
  #     DIR_NAME: cardidea-${{ matrix.var.os }}-x64-${{ github.event.inputs.tag }}

  #   steps:

  #   - name: Checkout Project
  #     uses: actions/checkout@v3

  #   - name: Download Jar
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: target
  #       path: .

  #   - name: Download Packr
  #     run: |
  #       wget https://github.com/libgdx/packr/releases/download/4.0.0/packr-all-4.0.0.jar
  #       chmod +x packr-all-4.0.0.jar

  #   - name: Package
  #     run: java -jar packr-all-4.0.0.jar --platform ${{ matrix.var.platform }} --jdk https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8%2B7/${{ matrix.var.jre }} --classpath cardidea-${{ github.event.inputs.tag }}.jar  --output ${{env.DIR_NAME}} packr-config.json

  #   - name: Create Archive
  #     run: zip -r ${{env.DIR_NAME}}.zip ${{env.DIR_NAME}}

  #   - name: Attach Asset
  #     uses: actions/upload-release-asset@v1
  #     env:
  #       GITHUB_TOKEN: ${{ github.token }}
  #     with:
  #       upload_url: ${{ needs.prepare-release.outputs.upload_url }}
  #       asset_path: ./${{env.DIR_NAME}}.zip
  #       asset_name: ${{env.DIR_NAME}}.zip
  #       asset_content_type: application/zip

