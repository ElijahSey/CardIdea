name: Continuous Deployment Workflow
env:
  JAVA_VERSION: 21
on:
  workflow_dispatch

jobs:
  
  build:

    runs-on: ubuntu-latest
    permissions:
      packages: write
    env: 
      JAVAFX_VERSION: 21.0.1
      FX_WIN: javafx-win
      FX_MAC: javafx-mac
      FX_LINUX: javafx-linux

    outputs:
      version: ${{ steps.ver.outputs.version }}
    steps:

    - name: Checkout Project
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '${{env.JAVA_VERSION}}'
        distribution: 'temurin'
        server-id: github
        settings-path: ${{ github.workspace }}
        cache: 'maven'
        check-latest: true

    - name: Getting Maven Version
      id: ver
      run: |
        PROJECT_VERSION=$(mvn help:evaluate -Dexpression='project.version' -q -DforceStdout)
        echo "version=$PROJECT_VERSION" >> $GITHUB_OUTPUT

    - name: Publish to GitHub Packages Apache Maven
      run: mvn -B package -Dmaven.test.skip=true
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Download JavaFX
      env:
        BASE_PATH: https://download2.gluonhq.com/openjfx/${{env.JAVAFX_VERSION}}/
        WINDOWS: openjfx-${{env.JAVAFX_VERSION}}_windows-x64_bin-jmods
        MACOS: openjfx-${{env.JAVAFX_VERSION}}_osx-x64_bin-jmods
        LINUX: openjfx-${{env.JAVAFX_VERSION}}_linux-x64_bin-jmods
      run: |
        wget ${{env.BASE_PATH}}${{env.WINDOWS}}.zip
        unzip ${{env.WINDOWS}}.zip -d ${{env.FX_WIN}}
        wget ${{env.BASE_PATH}}${{env.MACOS}}.zip
        unzip ${{env.MACOS}}.zip -d ${{env.FX_MAC}}
        wget ${{env.BASE_PATH}}${{env.LINUX}}.zip
        unzip ${{env.LINUX}}.zip -d ${{env.FX_LINUX}}

    - name: Upload JavaFX Windows
      uses: actions/upload-artifact@v3
      with:
        name: ${{env.FX_WIN}}
        path: ${{env.FX_WIN}}

    - name: Upload JavaFX MacOS
      uses: actions/upload-artifact@v3
      with:
        name: ${{env.FX_MAC}}
        path: ${{env.FX_MAC}}

    - name: Upload JavaFX Linux
      uses: actions/upload-artifact@v3
      with:
        name: ${{env.FX_LINUX}}
        path: ${{env.FX_LINUX}}
        
    - name: Upload Jar
      uses: actions/upload-artifact@v3
      with:
        name: target
        path: |
          ./target/cardidea-${{steps.ver.outputs.version}}.jar
          ./target/lib/
          ./cardidea.ico
          ./splashscreen.png

  create-installers:

    strategy:
      matrix:
        var: [
          {os: windows-latest, name: win, type: msi, options: --win-dir-chooser --win-shortcut-prompt --win-menu},
          {os: macos-latest, name: mac, type: dmg, options: },
          {os: ubuntu-latest, name: linux, type: deb, options: --linux-shortcut}
        ]
    env:
      INST_NAME: cardidea-${{ needs.build.outputs.version }}-${{matrix.var.name}}.${{matrix.var.type}}
      PACKAGE_DIR: ./package-dir
      JAVAFX_DIR: ./javafx
      RUNTIME_IMAGE: jre

    runs-on: ${{matrix.var.os}}
    needs: [build]

    steps:

      - name: Checkout Project
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '${{env.JAVA_VERSION}}'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}
          cache: 'maven'
          check-latest: true

      - name: Download Jar
        uses: actions/download-artifact@v3
        with:
          name: target
          path: ${{env.PACKAGE_DIR}}

      - name: Download JavaFX
        uses: actions/download-artifact@v3
        with:
          name: javafx-${{matrix.var.name}}
          path: ${{env.JAVAFX_DIR}}

      - name: Structure Folders
        run: |
          mv ${{env.PACKAGE_DIR}}/target/* ${{env.PACKAGE_DIR}}/
          rmdir ${{env.PACKAGE_DIR}}/target
          mv ${{env.JAVAFX_DIR}}/* ${{env.JAVAFX_DIR}}/javafx

      - name: Create Package (JPackage)
        shell: bash
        run: |
          ls -la ${{env.JAVAFX_DIR}}/javafx
          jpackage \
            --name cardIDEA \
            --input ${{env.PACKAGE_DIR}} \
            --main-jar cardidea-${{ needs.build.outputs.version }}.jar \
            --module-path ${{env.JAVAFX_DIR}}/javafx \
            --add-modules javafx.controls,javafx.fxml \
            --java-options '-splash:$APPDIR/splashscreen.png' \
            --type ${{matrix.var.type}} \
            --app-version ${{ needs.build.outputs.version }} \
            --icon cardidea.ico \
            --verbose \
            ${{matrix.var.options}}

      - name: Rename Package
        run: mv card*.${{matrix.var.type}} ${{env.INST_NAME}}

      - name: Upload Jar
        uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.var.name}}-asset
          path: ./${{env.INST_NAME}}

  create-release:

    runs-on: ubuntu-latest
    needs: [build, create-installers]

    permissions:
      contents: write

    steps:

      - name: Checkout Project
        uses: actions/checkout@v4

      - name: Download Assets
        uses: actions/download-artifact@v3
        with:
          path: .

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.build.outputs.version }}
          body_path: CHANGELOG.md
          files: |
            win-asset/cardidea-${{ needs.build.outputs.version }}-win.msi
            mac-asset/cardidea-${{ needs.build.outputs.version }}-mac.dmg
            linux-asset/cardidea-${{ needs.build.outputs.version }}-linux.deb

