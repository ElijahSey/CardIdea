name: Continuous Deployment Workflow

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Version'
        required: true

jobs:
  
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:

    - name: Checkout Project
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
        cache: 'maven'
        check-latest: true # Always download the latest java version

    - name: Setting Maven Version
      run: mvn -B versions:set -DnewVersion=${{ github.event.inputs.tag }} -DgenerateBackupPoms=false

    - name: Publish to GitHub Packages Apache Maven
      run: mvn -B package -Dmaven.test.skip=true
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Upload Jar
      uses: actions/upload-artifact@v3
      with:
        name: target
        path: |
          ./target/cardidea-${{ github.event.inputs.tag }}.jar
          ./target/lib/
          ./cardidea.ico

  create-installers:

    strategy:
      matrix:
        var: [
          {os: windows-latest, name: win, type: msi, options: --win-dir-chooser --win-shortcut-prompt --win-menu},
          {os: macos-latest, name: mac, type: dmg, options: },
          {os: ubuntu-latest, name: linux, type: deb, options: --linux-shortcut}
        ]
    env:
      INST_NAME: cardidea-${{ github.event.inputs.tag }}-${{matrix.var.name}}.${{matrix.var.type}}
      PACKAGE_DIR: ./package-dir

    runs-on: ${{matrix.var.os}}
    needs: [build]
    permissions:
      contents: write

    steps:

      - name: Checkout Project
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location of the settings.xml file
          cache: 'maven'
          check-latest: true # Always download the latest java version

      - name: Download Jar
        uses: actions/download-artifact@v3
        with:
          name: target
          path: ${{ env.PACKAGE_DIR}}

      - name: Structure Folder
        run: |
          mv ${{ env.PACKAGE_DIR}}/target/* ${{ env.PACKAGE_DIR}}/

      - name: Create Package
        run: jpackage --name cardIdea --input ${{ env.PACKAGE_DIR}} --main-jar cardidea-${{ github.event.inputs.tag }}.jar --type ${{matrix.var.type}} --app-version ${{ github.event.inputs.tag }} --icon cardidea.ico ${{matrix.var.options}}

      - name: Rename Package
        run: mv card*.${{matrix.var.type}} ${{env.INST_NAME}}

      - name: Upload Jar
        uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.var.name}}-asset
          path: ./${{env.INST_NAME}}

  create-release:

    runs-on: ubuntu-latest
    needs: [create-installers]

    permissions:
      contents: write

    steps:

      - name: Checkout Project
        uses: actions/checkout@v3

      - name: Download Assets
        uses: actions/download-artifact@v3
        with:
          path: .

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.tag }}
          body_path: CHANGELOG.md
          files: |
            win-asset/cardidea-${{ github.event.inputs.tag }}-win.exe
            mac-asset/cardidea-${{ github.event.inputs.tag }}-mac.dmg
            linux-asset/cardidea-${{ github.event.inputs.tag }}-linux.deb

